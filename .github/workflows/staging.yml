
name: Deploy Express API with Prisma to cPanel

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
      - name: Debug - List directory structure
        run: |
          echo "Current directory structure:"
          ls -la
          echo "\nChecking if src directory exists:"
          if [ -d "src" ]; then 
            echo "src/ directory found"
            ls -la src/
          else 
            echo "src/ directory not found!" 
            echo "Looking for other source directories:"
            find . -type d -not -path "*/node_modules/*" -not -path "*/.git/*" | sort
          fi
          
      # Mencoba metode explicit include daripada exclude
      - name: Compress all source files
        run: |
          # Mencari semua folder dan file penting
          echo "Creating explicit list of important folders"
          
          # Buat daftar semua file dan folder kecuali node_modules dan .git
          find . -type d -not -path "*/node_modules/*" -not -path "*/.git/*" -not -path "*/.github/*" > important_dirs.txt
          find . -type f -not -path "*/node_modules/*" -not -path "*/.git/*" -not -path "*/.github/*" -not -name ".env" > important_files.txt
          
          # Debug - tampilkan daftar file/folder penting
          echo "Important directories to include:"
          cat important_dirs.txt
          
          echo "Important files to include (sample):"
          head -n 20 important_files.txt
          
          # Buat archive dengan semua file/folder penting
          mkdir -p /tmp/deploy-files
          
          # Copy semua folder penting
          cat important_dirs.txt | xargs -I{} mkdir -p "/tmp/deploy-files/{}"
          
          # Copy semua file penting
          cat important_files.txt | xargs -I{} cp --parents "{}" /tmp/deploy-files/
          
          # Debug - cek hasil copy
          echo "Files ready for deployment:"
          find /tmp/deploy-files -type f | sort | head -n 20
          
          # Create tar archive of all copied files
          cd /tmp/deploy-files
          tar -czf /tmp/build.tar.gz .
          cp /tmp/build.tar.gz $GITHUB_WORKSPACE/build.tar.gz
          
          # Debug - verify tar contents
          echo "Tar contents (sample):"
          tar -tvf build.tar.gz | head -n 20
          
      - name: Deploy files to cPanel
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }} 
          source: "build.tar.gz"
          target: "/home/metrosof/api/surau-quran-staging-api"
          
      - name: Setup application in cPanel
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }} 
          script: |
            cd /home/metrosof/api/surau-quran-staging-api
            
            # Backup .env dan node_modules
            if [ -f .env ]; then
              cp .env .env.backup
            fi
            if [ -d node_modules ]; then
              mv node_modules node_modules_backup
            fi
            
            # Debug - lihat isi tar sebelum extract
            echo "Checking tar contents before extracting:"
            tar -tvf build.tar.gz | grep -E "src|index.js|app.js" || echo "src/ or main files not found in archive!"
            
            # Extract files
            tar -xzf build.tar.gz
            
            # Debug - periksa struktur direktori setelah extract
            echo "Directory structure after extract:"
            ls -la
            if [ -d "src" ]; then
              echo "src/ directory found after extract"
              ls -la src/
            else
              echo "src/ directory still not found after extract!"
            fi
            
            # Restore .env dari backup
            if [ -f .env.backup ]; then
              cp .env.backup .env
              rm .env.backup
            else
              echo "DATABASE_URL='${{ secrets.DATABASE_URL }}'" > .env
            fi
            
            # Restore node_modules jika ada backup
            if [ -d node_modules_backup ]; then
              rm -rf node_modules
              mv node_modules_backup node_modules
            else
              npm ci --only=production
            fi
            
            # Generate Prisma client
            npx prisma generate
            
            # Restart atau mulai aplikasi dengan PM2
            ENTRY_POINT="index.js"
            if [ ! -f "$ENTRY_POINT" ]; then
              if [ -f "app.js" ]; then
                ENTRY_POINT="app.js"
              elif [ -f "server.js" ]; then
                ENTRY_POINT="server.js"
              elif [ -f "src/index.js" ]; then
                ENTRY_POINT="src/index.js"
              fi
            fi
            
            echo "Using entry point: $ENTRY_POINT"
            
            if [ -f ~/.pm2/pm2.pid ]; then 
              pm2 restart surau-quran-api || pm2 start $ENTRY_POINT --name surau-quran-api
            else 
              pm2 start $ENTRY_POINT --name surau-quran-api
            fi
            
            # Bersihkan file tar
            rm build.tar.gz