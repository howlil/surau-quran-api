ame: Deploy Express API with Prisma to cPanel

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
      
      - name: Generate Prisma
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
      # Gunakan zip daripada tar
      - name: Create deployment package
        run: |
          # Buat zip (lebih stabil daripada tar)
          zip -r build.zip . -x "node_modules/*" ".git/*" ".github/*" ".env"
          
          # Verifikasi
          ls -la build.zip
          
      - name: Deploy files to cPanel
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }} 
          source: "build.zip"
          target: "/home/metrosof/api/surau-quran-staging-api"
          
      - name: Deploy on cPanel
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }} 
          script: |
            cd /home/metrosof/api/surau-quran-staging-api
            
            # Backup .env dan node_modules
            if [ -f .env ]; then
              cp .env .env.backup
            fi
            if [ -d node_modules ]; then
              mv node_modules node_modules_backup
            fi
            
            # Unzip file
            unzip -o build.zip
            
            # Restore .env
            if [ -f .env.backup ]; then
              cp .env.backup .env
              rm .env.backup
            else
              echo "DATABASE_URL='${{ secrets.DATABASE_URL }}'" > .env
            fi
            
            # Restore node_modules atau install dependencies
            if [ -d node_modules_backup ]; then
              rm -rf node_modules
              mv node_modules_backup node_modules
            else
              # Setup NVM dan Node.js 18.18
              if [ ! -d "$HOME/.nvm" ]; then
                curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
              fi
              export NVM_DIR="$HOME/.nvm"
              [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
              nvm install 18.18
              nvm use 18.18
              
              # Install dependencies
              npm install
              npm install dotenv --save
            fi
            
            # Generate Prisma
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 18.18
            npx prisma generate
            
            # Setup PM2
            if ! command -v pm2 &> /dev/null; then
              npm install -g pm2
            fi
            
            # Create PM2 config
            cat > ecosystem.config.js << EOL
            module.exports = {
              apps: [{
                name: "surau-quran-api",
                script: "index.js",
                exec_mode: "fork",
                instances: 1,
                autorestart: true,
                watch: false,
                max_memory_restart: "300M",
                env: {
                  NODE_ENV: "production",
                  PORT: 8080
                },
                interpreter: "$HOME/.nvm/versions/node/v18.18.0/bin/node"
              }]
            };
            EOL
            
            # Start app
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use 18.18
            if pm2 list | grep -q "surau-quran-api"; then
              pm2 delete surau-quran-api
            fi
            pm2 start ecosystem.config.js
            pm2 save
            
            # Clean up
            rm build.zip
            
            # Check structure
            echo "Directory contents:"
            ls -la
            echo "Src directory contents:"
            ls -la src